openapi: '3.0.2'
info:
  title: SI-EMOO
  description: This is a sample SI-EMOO server.
  version: '1.0.0'
servers:
  - url: https://siemoo.vercel.app/api/v1
    description: Development server
  - url: http://localhost:3000/api/v1
    description: local server
paths:
  # user
  /user/register:
    post:
      tags:
        - User
      summary: Register user
      description: Register user
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  default: "mail@mail.com"
                password:
                  type: string
                  default: "**********"
                fullname:
                  type: string
                  default: "Fatkhurrohman Purnomo"
                sapi:
                  type: integer
                  default: 1
                no_wa:
                  type: string
                  default: "085151515151"
                rt:
                  type: string
                  default: "01"
                rw: 
                  type: string
                  default: "01"
                id_kelompok:
                  type: integer
                  default: 01
                role:
                  type: string
                  default: "pembeli"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: "#/components/schemas/UserFull"
                          - type: object
                            properties:
                              created:
                                type: string
                                default: "2023-12-28T07:34:45.872Z"
                              updated:
                                type: string
                                default: "2023-12-28T07:34:45.872Z"

        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object
  
  /user/login:
    post:
      tags:
        - User
      summary: Login user
      description: Login user
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  default: "mail@mail.com"
                password:
                  type: string
                  default: "**********"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          user:
                            allOf:
                              - $ref: "#/components/schemas/UserFull"
                              - type: object
                                properties:
                                  created:
                                    type: string
                                    default: "2023-12-28T07:34:45.872Z"
                                  updated:
                                    type: string
                                    default: "2023-12-28T07:34:45.872Z"
                          token:
                            type: string
                            default: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMzkyMzU1NCwiZXhwIjoxNzA0MDA5OTU0fQ.mC_E7UDvoTVcSZjMMrCfMEE926mbEGlfb_iEbrMATM0"
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object

  /user/whoami:
    get:
      tags:
        - User
      summary: Data user
      description: Data user
      operationId: getUlasan
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          user:
                            $ref: "#/components/schemas/UserFull"
                          kelompok:
                            type: string
                            default: "Tidak memiliki kelompok"
                          pengujian:
                            $ref: "#/components/schemas/Pengujian"
                          created:
                            type: string
                            default: "2023-12-28T07:34:45.872Z"
                          updated:
                            type: string
                            default: "2023-12-28T07:34:45.872Z"
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object

  /user:
    get:
      tags:
        - User
      summary: Mendapatkan user
      description: Mendapatkan semua user
      operationId: get-user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/PengujianFull"
                            - type: object
                              properties:
                                created:
                                  type: string
                                  example: "2023-12-28T07:34:45.872Z"
                                updated:
                                  type: string
                                  example: "2023-12-28T07:34:45.872Z"

        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object

  # kelompok
  /kelompok:
    post:
      tags:
        - Kelompok
      summary: Menambahkan kelompok tani
      description: Menambahkan kelompok tani
      operationId: create-kelompok
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama:
                  type: string
                  default: "Kelompok maju tani"
      responses:
        '201':
          description: Kelompok created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data: 
                        $ref: "#/components/schemas/Kelompok"
                          
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object
      security:
        - bearerAuth: []

    get:
      tags:
        - Kelompok
      summary: Mendapatkan kelompok
      description: Mendapatkan semua kelompok
      operationId: getKelompok
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          nama:
                            type: string
                            example: "ads"
        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object


  /kelompok/{id}:
    get:
      tags:
        - Kelompok
      summary: Mendapatkan kelompok
      description: Mendapatkan kelompok sesuai id
      operationId: getkelompokById
      parameters:
        - name: id
          in: path
          required: true
          description: Id target
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Kelompok"

        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object

    put:
      tags:
        - Kelompok
      summary: Mengedit Kelompok 
      description: Mengedit kelompok sesuai id
      operationId: update-kelompok
      parameters:
        - name: id
          in: path
          required: true
          description: Id target
          schema:
            type : integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama:
                  type: string
                  default: "Kelompok maju tani"
      responses:
        '200':
          description: OK!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Kelompok"
        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object
      security:
        - bearerAuth: []

    delete:
      tags:
        - Kelompok
      summary: Menghapus kelompok 
      description: Menghapus kelompok sesuai id
      operationId: delete-kelompok
      parameters:
        - name: id
          in: path
          required: true
          description: Id target
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: string
                        example: null
                        

        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object
      security:
        - bearerAuth: []

  # Artikel
  /artikel:
    post:
      tags:
        - Artikel
      summary: Menambahkan artikel
      description: Menambahkan artikel baik untuk menu Olah pangan atau Sulap limbah (link dan gambar bisa tidak di isi, atau di isi keduanya)
      operationId: create-artikel
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                judul:
                  type: string
                  default: "Judul artikel"
                deskripsi: 
                  type: string
                  default: "Sapi adalah hewan"
                menu:
                  type: string
                  description: pilih salah satu (olah_pangan / olah_pangan)
                image:
                  type: string
                  format: binary
                  description: Dapat memasukkan lebih dari 1 gambar
                link:
                  type: string
                  default: "https://youtube.com"
                  description: dapat memasukan link video atau foto. hanya dapat memasukan 1 link
                
      responses:
        '201':
          description: Artikel created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: "#/components/schemas/ArtikelFull"

        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object
      security:
        - bearerAuth: []

  /artikel/limbah:
    get:
      tags:
        - Artikel
      summary: Mendapatkan artikel limbah
      description: Mendapatkan semua artikel limbah
      operationId: get-artikel-limbah
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/Artikel"
                            - type: object
                              properties:
                                menu:
                                  type: string
                                  example: "sulap_limbah"
                                media:
                                  $ref: "#/components/schemas/Media"
        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object

  /artikel/pangan:
    get:
      tags:
        - Artikel
      summary: Mendapatkan artikel pangan
      description: Mendapatkan semua artikel pangan
      operationId: get-artikel-pangan
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/Artikel"
                            - type: object
                              properties:
                                menu:
                                  type: string
                                  example: "olah_pangan"
                                media:
                                  $ref: "#/components/schemas/Media"
        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object

  /artikel/{id}:
    get:
      tags:
        - Artikel
      summary: Mendapatkan artikel
      description: Mendapatkan artikel sesuai id
      operationId: get-artikel-by-id
      parameters:
        - name: id
          in: path
          required: true
          description: Id target
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          judul:
                            type: string
                            example: "Sapi racing"
                          deskripsi:
                            type: string
                            example: "Makanan sapi"
                          menu: 
                            type: string
                            example: "sulap_limbah"
                          user:
                            allOf:
                              - $ref: "#/components/schemas/User"
                          media: 
                            $ref: "#/components/schemas/Media"
                          created:
                            type: string
                            example: "2023-12-28T14:18:05.000Z"
                          updated:
                            type: string
                            example: "2023-12-28T14:18:05.000Z"    

        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object

    put:
      tags:
        - Artikel
      summary: Update artikel
      description: Update artikel baik untuk menu Olah pangan atau Sulap limbah (link dan gambar bisa tidak di isi, atau di isi keduanya)
      operationId: update-artikel
      parameters:
        - name: id
          in: path
          required: true
          description: Id target
          schema:
            type : integer
            format: int64
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                judul:
                  type: string
                  default: "Judul artikel"
                deskripsi: 
                  type: string
                  default: "Sapi adalah hewan"
                menu:
                  type: string
                  description: pilih salah satu (olah_pangan / olah_pangan)
                image:
                  type: string
                  format: binary
                  description: Dapat memasukkan lebih dari 1 gambar
                link:
                  type: string
                  default: "https://youtube.com"
                  description: dapat memasukan link video atau foto. hanya dapat memasukan 1 link
                
      responses:
        '201':
          description: Artikel updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: "#/components/schemas/ArtikelFull"
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object
      security:
        - bearerAuth: []
    
    delete:
      tags:
        - Artikel
      summary: Menghapus artikel 
      description: Menghapus artikel sesuai id
      operationId: delete-artikel
      parameters:
        - name: id
          in: path
          required: true
          description: Id target
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: string
                        example: null
                        
        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object
      security:
        - bearerAuth: []

  # warung
  /warung:
    post:
      tags:
        - Warung
      summary: Menambahkan warung
      description: Menambahkan warung
      operationId: create-warung
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nama:
                  type: string
                  default: "Susu segar"
                harga: 
                  type: integer
                  default: 10000
                deskripsi:
                  type: string
                  default: "Susu yang sangat amat fresh"
                stok:
                  type: integer
                  default: 2
                kuantiti:
                  type: string
                  default: "liter"
                image:
                  type: string
                  format: binary
                  description: Dapat memasukkan lebih dari 1 gambar
                link:
                  type: string
                  default: "https://youtube.com"
                  description: dapat memasukan link video atau foto. hanya dapat memasukan 1 link
      responses:
        '201':
          description: Artikel created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: "#/components/schemas/WarungFull"
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object
      security:
        - bearerAuth: []
  
    get:
      tags:
        - Warung
      summary: Mendapatkan warung pangan
      description: Mendapatkan semua warung pangan
      operationId: get-warung-pangan
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            warung:
                              $ref: "#/components/schemas/Warung"
                            user:
                              $ref: "#/components/schemas/User"
                            pengujian:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  default: 1
                                hasil:
                                  type: string
                                  default: "SangatBaik"
                            media:
                              $ref: "#/components/schemas/Media"
                            created:
                              type: string
                              example: "2023-12-28T14:18:05.000Z"
                            updated:
                              type: string
                              example: "2023-12-28T14:18:05.000Z"
        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object

  /warung/{id}:
    get:
      tags:
        - Warung
      summary: Mendapatkan warung
      description: Mendapatkan warung sesuai id
      operationId: get-warung-by-id
      parameters:
        - name: id
          in: path
          required: true
          description: Id target
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Warung"
                      user:
                        $ref: "#/components/schemas/User"
                      pengujian:
                        type: object
                        properties:
                          id:
                            type: integer
                            default: 1
                          hasil:
                            type: string
                            default: "SangatBaik"
                      media:
                        $ref: "#/components/schemas/Media"
                      created:
                        type: string
                        example: "2023-12-28T14:18:05.000Z"
                      updated:
                        type: string
                        example: "2023-12-28T14:18:05.000Z" 
                              
        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object

    put:
      tags:
        - Warung
      summary: Update warung
      description: Update warung
      operationId: update-warung
      parameters:
        - name: id
          in: path
          required: true
          description: Id target
          schema:
            type : integer
            format: int64
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nama:
                  type: string
                  default: "Susu segar"
                harga: 
                  type: integer
                  default: 10000
                deskripsi:
                  type: string
                  default: "Susu yang sangat amat fresh"
                stok:
                  type: integer
                  default: 2
                kuantiti:
                  type: string
                  default: "liter"
                image:
                  type: string
                  format: binary
                  description: Dapat memasukkan lebih dari 1 gambar
                link:
                  type: string
                  default: "https://youtube.com"
                  description: dapat memasukan link video atau foto. hanya dapat memasukan 1 link

      responses:
        '201':
          description: Artikel update successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: "#/components/schemas/WarungFull"
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object
      security:
        - bearerAuth: []

    delete:
      tags:
        - Warung
      summary: Menghapus warung 
      description: Menghapus warung sesuai id
      operationId: delete-warung
      parameters:
        - name: id
          in: path
          required: true
          description: Id target
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: string
                        example: null
                        
        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object
      security:
        - bearerAuth: []
  
  # pengujian
  /pengujian:
    post:
      tags:
        - Pengujian
      summary: Menambahkan pengujian
      description: Menambahkan pengujian
      operationId: create-pengujian
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_user:
                  type: number
                  default: 1
                fat: 
                  type: integer
                  default: 1.1
                snf: 
                  type: integer
                  default: 1.5
                protein: 
                  type: integer
                  default: 17
                ph: 
                  type: integer
                  default: 1
      responses:
        '201':
          description: Artikel created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: "#/components/schemas/PengujianFull"
                          - type: object
                            properties:
                              created:
                                type: string
                                example: "2023-12-30T13:40:28.606Z"
                              updated:
                                type: string
                                example: "2023-12-30T13:40:28.606Z"

        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object
      security:
        - bearerAuth: []
  
    get:
      tags:
        - Pengujian
      summary: Mendapatkan pengujian pangan
      description: Mendapatkan semua pengujian pangan
      operationId: get-pengujian-pangan
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/PengujianFull"
                            - type: object
                              properties:
                                user:
                                  $ref: "#/components/schemas/User"

        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object

  /pengujian/user/{id}:
    get:
      tags:
        - Pengujian
      summary: Mendapatkan pengujian
      description: Mendapatkan pengujian sesuai id
      operationId: get-pengujian-by-id-user
      parameters:
        - name: id
          in: path
          required: true
          description: Id target
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: "#/components/schemas/UserFull"
                          - type: object
                            properties:
                              created:
                                type: string
                                example: "2023-12-28T14:18:05.000Z"
                              updated:
                                type: string
                                example: "2023-12-28T14:18:05.000Z"
                              pengujian:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    pengujian:
                                      $ref: '#/components/schemas/PengujianFull'
                              
        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object

  /pengujian/{id}:
    get:
      tags:
        - Pengujian
      summary: Mendapatkan pengujian
      description: Mendapatkan pengujian sesuai id
      operationId: get-pengujian-by-id
      parameters:
        - name: id
          in: path
          required: true
          description: Id target
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: "#/components/schemas/PengujianFull"
                          - type: object
                            properties:
                              user:
                                $ref: '#/components/schemas/User'
                              created:
                                type: string
                                example: "2023-12-28T14:18:05.000Z"
                              updated:
                                type: string
                                example: "2023-12-28T14:18:05.000Z" 


                          
                              
        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object

    put:
      tags:
        - Pengujian
      summary: Update pengujian
      description: Update pengujian
      operationId: update-pengujian
      parameters:
        - name: id
          in: path
          required: true
          description: Id target
          schema:
            type : integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_user:
                  type: number
                  default: 1
                fat: 
                  type: integer
                  default: 1.1
                snf: 
                  type: integer
                  default: 1.5
                protein: 
                  type: integer
                  default: 17
                ph: 
                  type: integer
                  default: 1
      responses:
        '201':
          description: Artikel created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: "#/components/schemas/PengujianFull"
                          - type: object
                            properties:
                              created:
                                type: string
                                example: "2023-12-30T13:40:28.606Z"
                              updated:
                                type: string
                                example: "2023-12-30T13:40:28.606Z"
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object
      security:
        - bearerAuth: []

    delete:
      tags:
        - Pengujian
      summary: Menghapus pengujian 
      description: Menghapus pengujian sesuai id
      operationId: delete-pengujian
      parameters:
        - name: id
          in: path
          required: true
          description: Id target
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BasicResponse"
                  - type: object
                    properties:
                      data:
                        type: string
                        example: null
                        
        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - type: object
      security:
        - bearerAuth: []

  
  # # ulasan
  # /user/registesadr:
  #   get:
  #     tags:
  #       - Ulasan
  #     summary: Mendapatkan ulasan
  #     description: Mendapatkan semua ulasan
  #     operationId: registeras
  #     parameters:
  #       - name: page
  #         in: query
  #         description: Get users by page
  #         schema:
  #           type : integer
  #           format: int64
  #           minimum: 1
  #       - name: limit
  #         in: query
  #         description: Get users by limit
  #         schema:
  #           type : integer
  #           format: int64
  #           minimum: 1
  #     responses:
  #       "200":
  #         description: Successful operation
  #         content:
  #           application/json:
  #             schema:
  #               allOf:
  #                 - $ref: "#/components/schemas/BasicResponse"
  #                 - type: object
  #                   properties:
  #                     data:
  #                       type: array
  #                       items:
  #                         type: object
  #                         properties:
  #                           id:
  #                             type: integer
  #                             example: 2
  #                           nama:
  #                             type: string
  #                             example: "ads"
  #                           ulasan:
  #                             type: string
  #                             example: "apa adanya"
  #                           wisataId:
  #                             type: integer
  #                             example: 20
  #                           hotelId:
  #                             type: string
  #                             example: null
  #                           createdAt:
  #                             type: string
  #                             format: date-time
  #                             example: "2023-11-26T07:42:08.186Z"
  #                           updatedAt:
  #                             type: string
  #                             format: date-time
  #                             example: "2023-11-26T07:42:08.186Z"
  #                           wisata:
  #                             type: string
  #                             example: "The Westin Singapore"
  
  # /ulasan/{id}:
  #   get:
  #     tags:
  #       - Ulasan
  #     summary: Mendapatkan ulasan
  #     description: Mendapatkan ulasan sesuai id
  #     operationId: getUlasanById
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         description: Get Ulasan By Id
  #         schema:
  #           type : integer
  #           format: int64
  #     responses:
  #       "200":
  #         description: Successful operation
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 status:
  #                   type: boolean
  #                   example: true
  #                 message:
  #                   type: string
  #                   example: "OK"
  #                 err:
  #                   type: object
  #                   example: null
  #                 data:
  #                   type: object
  #                   properties:
  #                     id:
  #                       type: integer
  #                       example: 2
  #                     nama:
  #                       type: string
  #                       example: "ads"
  #                     ulasan:
  #                       type: string
  #                       example: "apa adanya"
  #                     wisataId:
  #                       type: integer
  #                       example: 20
  #                     hotelId:
  #                       type: string
  #                       example: null
  #                     createdAt:
  #                       type: string
  #                       format: date-time
  #                       example: "2023-11-26T07:42:08.186Z"
  #                     updatedAt:
  #                       type: string
  #                       format: date-time
  #                       example: "2023-11-26T07:42:08.186Z"
  #                     wisata:
  #                       type: string
  #                       example: "The Westin Singapore"
  #       '400':
  #         description: Invalid status value
    
  #   post:
  #     tags:
  #       - Ulasan
  #     summary: Menambahkan ulasan 
  #     description: Menambahkan ulasan di wisata atau di hotel sesuai id
  #     operationId: create-ulasan
  #     requestBody:
  #       required: true
  #       content:
  #         multipart/form-data:
  #           schema:
  #             type: object
  #             properties:
  #               nama:
  #                 type: string
  #                 default: "ads"
  #               ulasan:
  #                 type: string
  #                 default: "apa adanya"
  #               wisataId:
  #                 type: integer
  #                 default: 20
  #               hotelId:
  #                 type: string
  #                 default: null
  #     responses:
  #       '201':
  #         description: OK!
  #       '400':
  #         description: Invalid status value
    
  #   put:
  #     tags:
  #       - Ulasan
  #     summary: Mengedit ulasan 
  #     description: Mengedit ulasan sesuai id
  #     operationId: update-ulasan
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         description: Get Ulasan By Id
  #         schema:
  #           type : integer
  #           format: int64
  #     requestBody:
  #       required: true
  #       content:
  #         multipart/form-data:
  #           schema:
  #             type: object
  #             properties:
  #               nama:
  #                 type: string
  #                 default: "ads"
  #               ulasan:
  #                 type: string
  #                 default: "apa adanya"
  #               wisataId:
  #                 type: integer
  #                 default: 20
  #               hotelId:
  #                 type: string
  #                 default: null
  #     responses:
  #       '201':
  #         description: OK!
  #       '400':
  #         description: Invalid status value
    
  #   delete:
  #     tags:
  #       - Ulasan
  #     summary: Menghapus ulasan
  #     description: Menghapus ulasan sesuai id
  #     operationId: deleteUlasanById
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         description: Get Ulasan By Id
  #         schema:
  #           type : integer
  #           format: int64
  #     responses:
  #       "200":
  #         description: Successful operation
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 status:
  #                   type: boolean
  #                   example: true
  #                 message:
  #                   type: string
  #                   example: "Data ulasan berhasil dihapus"
  #                 err:
  #                   type: string
  #                   example: null
  #                 data:
  #                   type: object
  #                   example: null
  #       '400':
  #         description: Invalid status value
  #     security:
  #       - bearerAuth: []
        

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    BasicResponse:
        title: BasicResponse
        type: object
        properties:
          status:
            type: boolean
            example: true
          message:
            type: string
            example: "OK"
          err:
            type: object
            example: null
    
    ErrorResponse:
        title: ErrorResponse
        type: object
        properties:
          status:
            type: boolean
            example: true
          message:
            type: string
            example: "Bad Request!"
          err:
            type: object
            example: null
          data:
            type: object
            example: null

    Pagination:
      title: Pagination
      type: object
      properties:
        links:
          type: object
          properties:
            next:
              type: string
              example: "https://domain.com/users?page=3&limit=10"
            prev:
              type: string
              example: "https://domain.com/users?page=1&limit=10"
        total_items:
          type: integer
          example: 100
    Data:
      title: Data
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          example: "mail@mail.com"

    Artikel:
      title: artikel
      type: object
      properties:
        id:
          type: integer
          example: 2
        judul:
          type: string
          example: "Sapi muda"
        deskripsi:
          type: string
          example: "Sapi merupakan hewan"
    
    Pengujian:
      type: object
      properties:
        id:
          type: integer
          example: 2
        judul:
          type: string
          example: "Baik"
    
    Kelompok:
      type: object
      properties:
        id: 
          type: integer
          default: 1
        nama: 
          type: string
          default: "Kelompok maju tani"
        created:
          type: string
          default: "2023-12-28T07:34:45.872Z"
        updated:
          type: string
          default: "2023-12-28T07:34:45.872Z"
    
    UserFull:
      type: object
      properties:
        id:
          type: integer
          default: 3
        email:
          type: string
          default: "admin@mail.com"
        fullname:
          type: string
          default: "namasaku ini"
        sapi:
          type: integer
          default: 15
        no_wa:
          type: string
          default: "+62851515151"
        rt:
          type: string
          default: "05"
        rw:
          type: string
          default: "02"
        id_kelompok:
          type: integer
          default: 999
        role:
          type: string
          default: "admin"
        
    
    Warung:
      title: warung
      type: object
      properties:
        id:
          type: integer
          example: 2
        nama:
          type: string
          example: "ads"
        harga:
          type: integer
          example: 10000
        deskripsi:
          type: string
          example: "Sapi merupakan hewan"
        kuantiti:
          type: string
          example: "liter"
        stok:
          type: integer
          example: 3

    Media:
      title: media
      type: array
      items: 
        type: object
        properties:
          id:
            type: integer
            example: 1
          link: 
            type: string
            example: "https://ik.imagekit.io/fathpurn/"
    
    Waktu:
      title: waktu
      properties:
        created:
          type: string
          example: "2023-12-28T14:18:05.000Z"
        updated:
          type: string
          example: "2023-12-28T14:18:05.000Z"
    
    User:
      title: user
      properties:
        id:
          type: integer
          example: 1
        fullname:
          type: string
          example: "Fatkhurrohman Purnomo"
        no_wa:
          type: integer
          example: +625858585858
    

    MediaFull:
      title: media-full
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            example: 44
          id_artikel:
            type: integer
            example: 16
          id_warung:
            type: integer
            example: 1
          id_link:
            type: string
            example: "658efb4688c257da337cec86"
          link:
            type: string
            example: "https://ik.imagekit.io/fathpurn/"
          created:
            type: string
            format: date-time
            example: "2023-12-29T17:00:55.471Z"
          updated:
            type: string
            format: date-time
            example: "2023-12-29T17:00:55.471Z"

    ArtikelFull:
      title: artikel
      properties:
        id:
          type: integer
          example: 22
        id_user:
          type: integer
          example: 3
        judul:
          type: string
          example: "Sapi super"
        deskripsi:
          type: string
          example: "ini adalah"
        menu:
          type: string
          example: "olah_pangan"
        created:
          type: string
          example: "2023-12-30T14:47:26.710Z"
        updated:
          type: string
          example: "2023-12-30T14:47:26.710Z"
    
    WarungFull:
      title: warung
      properties:
        id:
          type: integer
          example: 11
        id_user:
          type: integer
          example: 3
        id_pengujian:
          type: integer
          example: 997
        nama:
          type: string
          example: "dagangn"
        harga:
          type: integer
          example: 1000
        deskripsi:
          type: string
          example: "susu enak"
        kuantiti:
          type: string
          example: "Liter"
        stok:
          type: integer
          example: 3
        created:
          type: string
          example: "2023-12-30T13:40:28.606Z"
        updated:
          type: string
          example: "2023-12-30T13:40:28.606Z"
      

    PengujianMid:
      title: warung
      properties:
        id:
          type: integer
          example: 11
        id_user:
          type: integer
          example: 3
        fat:
          type: integer
          example: 1.3
        snf:
          type: integer
          example: 1.5
        protein:
          type: integer
          example: 4
        ph:
          type: integer
          example: 3

    PengujianFull:
      title: warung
      properties:
        id:
          type: integer
          example: 11
        id_user:
          type: integer
          example: 3
        fat:
          type: integer
          example: 1.3
        snf:
          type: integer
          example: 1.5
        protein:
          type: integer
          example: 4
        ph:
          type: integer
          example: 3
        hasil:
          type: string
          example: "SangatBaik"
        message:
          type: string
          example: "Perlu makan tambahan"
        